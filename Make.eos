# some common build rules

TOP ?= .

ALL: $(EXECUTABLES)


HEADERS := $(wildcard $(TOP)/*.H)

# compiler -- allowed options are GCC or CLANG
COMP ?= GCC

ifeq ($(COMP), CLANG)
  CC = clang++
else
  CC = g++
endif

# select the precision
PRECISION ?= FLOAT128

ifeq ($(PRECISION), FLOAT128)
  DEFINES := -DUSE_FLOAT128
else ifeq ($(PRECISION), LONG_DOUBLE)
  DEFINES := -DUSE_LONG_DOUBLE
endif

QUAD_PTS ?= 200

ifeq ($(QUAD_PTS), 50)
  DEFINES += -DQUAD50
else ifeq ($(QUAD_PTS), 100)
  DEFINES += -DQUAD100
else ifeq ($(QUAD_PTS), 200)
  DEFINES += -DQUAD200
else
  DEFINES += -DQUAD400
endif

# for clang-tidy -- clang doesn't find quadmath.H
# we'll look both in /usr and in ~/minicoda (for GCC installs via conda)
PATH_TO_QUADMATH := $(shell dirname $(shell find /usr/ -name quadmath.h 2> /dev/null | grep $(shell gcc -dumpversion)))
ifeq ($(strip $(PATH_TO_QUADMATH)),)
  PATH_TO_QUADMATH := $(shell dirname $(shell find ~/miniconda/ -name quadmath.h 2> /dev/null | grep $(shell gcc -dumpversion)))
endif

INCLUDES := $(TOP)

INCLUDE_FLAGS := $(patsubst %,-I%,$(INCLUDES))

CXXFLAGS := -O3 -std=c++23 -fext-numeric-literals -Wall -Wextra -Wshadow


% : %.cpp $(HEADERS)
ifeq ($(USE_CLANG_TIDY),TRUE)
	clang-tidy --config-file=$(TOP)/.clang-tidy --warnings-as-errors=* $< -- $(CXXFLAGS) $(DEFINES) $(INCLUDE_FLAGS) -I$(PATH_TO_QUADMATH)
endif
	$(CC) $(CXXFLAGS) $(GNU_QUADMATH_FLAGS) $(DEFINES) $(INCLUDE_FLAGS) -o $@ $<

clean:
	rm -f $(EXECUTABLES)
